<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/tests/test_api.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/tests/test_api.py" />
              <option name="originalContent" value="from fastapi.testclient import TestClient&#10;from app.main import app&#10;from app import workers&#10;&#10;&#10;def test_pow():&#10;    response = client.post(&quot;/pow&quot;, json={&quot;base&quot;: 2, &quot;exponent&quot;: 5})&#10;    assert response.status_code == 200&#10;    assert response.json() == {&quot;result&quot;: 32.0}&#10;&#10;&#10;def test_fib():&#10;    response = client.post(&quot;/fib&quot;, json={&quot;number&quot;: 10})&#10;    assert response.status_code == 200&#10;    assert response.json()[&quot;result&quot;] == 55  # 10th Fibonacci number&#10;    print(&quot;Got response:&quot;, response)&#10;&#10;&#10;def test_factorial():&#10;    response = client.post(&quot;/factorial&quot;, json={&quot;number&quot;: 5})&#10;    assert response.status_code == 200&#10;    assert response.json()[&quot;result&quot;] == 120&#10;&#10;&#10;def test_invalid_input_pow():&#10;    response = client.post(&quot;/pow&quot;, json={&quot;base&quot;: &quot;abc&quot;, &quot;exponent&quot;: 2})&#10;    assert response.status_code == 422  # Unprocessable Entity&#10;&#10;&#10;def test_invalid_input_fib():&#10;    response = client.post(&quot;/fib&quot;, json={&quot;number&quot;: -5})&#10;    assert response.status_code == 422&#10;" />
              <option name="updatedContent" value="from fastapi.testclient import TestClient&#10;from app.main import app&#10;from app import workers&#10;&#10;client = TestClient(app)&#10;&#10;&#10;def test_pow():&#10;    response = client.post(&quot;/pow&quot;, json={&quot;base&quot;: 2, &quot;exponent&quot;: 5})&#10;    assert response.status_code == 200&#10;    assert response.json() == {&quot;result&quot;: 32.0}&#10;&#10;&#10;def test_fib():&#10;    response = client.post(&quot;/fib&quot;, json={&quot;number&quot;: 10})&#10;    assert response.status_code == 200&#10;    assert response.json()[&quot;result&quot;] == 55  # 10th Fibonacci number&#10;    print(&quot;Got response:&quot;, response)&#10;&#10;&#10;def test_factorial():&#10;    response = client.post(&quot;/factorial&quot;, json={&quot;number&quot;: 5})&#10;    assert response.status_code == 200&#10;    assert response.json()[&quot;result&quot;] == 120&#10;&#10;&#10;def test_invalid_input_pow():&#10;    response = client.post(&quot;/pow&quot;, json={&quot;base&quot;: &quot;abc&quot;, &quot;exponent&quot;: 2})&#10;    assert response.status_code == 422  # Unprocessable Entity&#10;&#10;&#10;def test_invalid_input_fib():&#10;    response = client.post(&quot;/fib&quot;, json={&quot;number&quot;: -5})&#10;    assert response.status_code == 422" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>